{"ast":null,"code":"var _jsxFileName = \"G:\\\\surgeAina\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/tasks'; // Update if backend is deployed\n\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const [editId, setEditId] = useState(null);\n  const [editText, setEditText] = useState('');\n\n  // Fetch all tasks\n  useEffect(() => {\n    axios.get(API_URL).then(res => setTasks(res.data));\n  }, []);\n\n  // Add new task\n  const handleAdd = async () => {\n    if (!newTask.trim()) return;\n    const res = await axios.post(API_URL, {\n      title: newTask\n    });\n    setTasks([...tasks, res.data]);\n    setNewTask('');\n  };\n\n  // Delete task\n  const handleDelete = async id => {\n    await axios.delete(`${API_URL}/${id}`);\n    setTasks(tasks.filter(t => t._id !== id));\n  };\n\n  // Start editing\n  const startEdit = task => {\n    setEditId(task._id);\n    setEditText(task.title);\n  };\n\n  // Save edit\n  const handleEdit = async id => {\n    const res = await axios.put(`${API_URL}/${id}`, {\n      title: editText\n    });\n    setTasks(tasks.map(t => t._id === id ? res.data : t));\n    setEditId(null);\n    setEditText('');\n  };\n\n  // Mark as complete\n  const handleComplete = async id => {\n    const res = await axios.put(`${API_URL}/${id}`, {\n      completed: true\n    });\n    setTasks(tasks.map(t => t._id === id ? res.data : t));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"todo-title\",\n      children: \"\\uD83D\\uDCDD To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"todo-input\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value),\n        placeholder: \"Add a new task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-add-btn\",\n        onClick: handleAdd,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `todo-item${task.completed ? ' completed' : ''}`,\n        children: editId === task._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"todo-edit-input\",\n            value: editText,\n            onChange: e => setEditText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-save-btn\",\n            onClick: () => handleEdit(task._id),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-cancel-btn\",\n            onClick: () => setEditId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-text\",\n            style: {\n              textDecoration: task.completed ? 'line-through' : 'none'\n            },\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-edit-btn\",\n            onClick: () => startEdit(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-delete-btn\",\n            onClick: () => handleDelete(task._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), !task.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"todo-complete-btn\",\n            onClick: () => handleComplete(task._id),\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MRyFv45IWiI73ZaqmYL6whMl2DU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_URL","App","_s","tasks","setTasks","newTask","setNewTask","editId","setEditId","editText","setEditText","get","then","res","data","handleAdd","trim","post","title","handleDelete","id","delete","filter","t","_id","startEdit","task","handleEdit","put","map","handleComplete","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","style","textDecoration","_c","$RefreshReg$"],"sources":["G:/surgeAina/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst API_URL = 'http://localhost:5000/tasks'; // Update if backend is deployed\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState('');\r\n  const [editId, setEditId] = useState(null);\r\n  const [editText, setEditText] = useState('');\r\n\r\n  // Fetch all tasks\r\n  useEffect(() => {\r\n    axios.get(API_URL).then(res => setTasks(res.data));\r\n  }, []);\r\n\r\n  // Add new task\r\n  const handleAdd = async () => {\r\n    if (!newTask.trim()) return;\r\n    const res = await axios.post(API_URL, { title: newTask });\r\n    setTasks([...tasks, res.data]);\r\n    setNewTask('');\r\n  };\r\n\r\n  // Delete task\r\n  const handleDelete = async id => {\r\n    await axios.delete(`${API_URL}/${id}`);\r\n    setTasks(tasks.filter(t => t._id !== id));\r\n  };\r\n\r\n  // Start editing\r\n  const startEdit = task => {\r\n    setEditId(task._id);\r\n    setEditText(task.title);\r\n  };\r\n\r\n  // Save edit\r\n  const handleEdit = async id => {\r\n    const res = await axios.put(`${API_URL}/${id}`, { title: editText });\r\n    setTasks(tasks.map(t => (t._id === id ? res.data : t)));\r\n    setEditId(null);\r\n    setEditText('');\r\n  };\r\n\r\n  // Mark as complete\r\n  const handleComplete = async id => {\r\n    const res = await axios.put(`${API_URL}/${id}`, { completed: true });\r\n    setTasks(tasks.map(t => (t._id === id ? res.data : t)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <h1 className=\"todo-title\">üìù To-Do List</h1>\r\n      <div className=\"todo-input-group\">\r\n        <input\r\n          className=\"todo-input\"\r\n          value={newTask}\r\n          onChange={e => setNewTask(e.target.value)}\r\n          placeholder=\"Add a new task...\"\r\n        />\r\n        <button className=\"todo-add-btn\" onClick={handleAdd}>Add</button>\r\n      </div>\r\n      <ul className=\"todo-list\">\r\n        {tasks.map(task => (\r\n          <li key={task._id} className={`todo-item${task.completed ? ' completed' : ''}`}>\r\n            {editId === task._id ? (\r\n              <>\r\n                <input\r\n                  className=\"todo-edit-input\"\r\n                  value={editText}\r\n                  onChange={e => setEditText(e.target.value)}\r\n                />\r\n                <button className=\"todo-save-btn\" onClick={() => handleEdit(task._id)}>Save</button>\r\n                <button className=\"todo-cancel-btn\" onClick={() => setEditId(null)}>Cancel</button>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span className=\"todo-text\" style={{ textDecoration: task.completed ? 'line-through' : 'none' }}>\r\n                  {task.title}\r\n                </span>\r\n                <button className=\"todo-edit-btn\" onClick={() => startEdit(task)}>Edit</button>\r\n                <button className=\"todo-delete-btn\" onClick={() => handleDelete(task._id)}>Delete</button>\r\n                {!task.completed && (\r\n                  <button className=\"todo-complete-btn\" onClick={() => handleComplete(task._id)}>Complete</button>\r\n                )}\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}